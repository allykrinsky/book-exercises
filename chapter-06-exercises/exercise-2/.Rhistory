# Create a variable `lyric` that contains the text "I like to eat apples and
# bananas"
lyric <- "I like to eat apples and bananas"
?substr
intro <- substr(lyric, 1, 13)
fruits <- substr(lyric, 15, nchar(lyric))
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "ee".
# Store the result in a variable called `fruits_e`
# Hint: see http://www.endmemo.com/program/R/sub.php for a simpmle example (or
# use `?gsub`)
?gsub
fruits_e <- gsub(ee, a, fruits)
fruits_e <- gsub(a, ee, fruits)
fruits_e <- gsub("a", "ee", fruits)
# Use the `gsub()` function to substitute all the "a"s in `fruits` with "o".
# Store the result in a variable called `fruits_o`
fruits_o <- gsub("a" , "o", fruits)
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- c(intro, fruits_e)
lyric_e
?c
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(c(intro, fruits_o))
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(c(intro, fruits_o, sep = ""))
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(c(intro, fruits_o))
# Create a new variable `lyric_e` that is the `intro` combined with the new
# `fruits_e` ending. Print out this variable
lyric_e <- paste(intro, fruits_e)
# Without making a new variable, print out the `intro` combined with the new
# `fruits_o` ending
print(paste(intro, fruits_o))
lyric_e
lyric_e
lyric_e
lyric_o
fruits_o
install.packages("stringr")
library("stringr")
word(lyric_e, 2, 4)
add_three <- function(arg) {
arg + 3
}
ten <- add_three(7)
ten
imperial_to_metric <- function(feet, inches){
feet_to_inches <- feet / 12
meters <- 0.3048 * (feet_to_inches + inches)
}
height_in_meters <- imperial_to_metric(5,7)
height_in_meters
imperial_to_metric <- function(feet, inches){
feet_to_inches <- feet * 12
meters <- 0.3048 * (feet_to_inches + inches)
}
height_in_meters <- imperial_to_metric(5,7)
height_in_meters
# Define a function `imperial_to_metric` that takes in two arguments: a number
# of feet and a number of inches
# The function should return the equivalent length in meters
imperial_to_metric <- function(feet, inches){
feet_to_inches <- feet * 12
meters <- 0.3048 * (feet_to_inches + inches)
}
67 * .3048
# Define a function `imperial_to_metric` that takes in two arguments: a number
# of feet and a number of inches
# The function should return the equivalent length in meters
imperial_to_metric <- function(feet, inches){
feet_to_inches <- feet * 12
meters <- 0.0254 * (feet_to_inches + inches)
}
height_in_meters <- imperial_to_metric(5,7)
height_in_meters
